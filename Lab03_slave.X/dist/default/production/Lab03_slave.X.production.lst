

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 03 01:13:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0001                     _TMR0	set	1
   290  000C                     _PIR1bits	set	12
   291  000B                     _INTCONbits	set	11
   292  0009                     _PORTE	set	9
   293  0008                     _PORTD	set	8
   294  0007                     _PORTC	set	7
   295  0005                     _PORTA	set	5
   296  001F                     _ADCON0bits	set	31
   297  001E                     _ADRESH	set	30
   298  0063                     _SSPIF	set	99
   299  0066                     _ADIF	set	102
   300  0094                     _SSPSTATbits	set	148
   301  0094                     _SSPSTAT	set	148
   302  0081                     _OPTION_REGbits	set	129
   303  0085                     _TRISAbits	set	133
   304  008C                     _PIE1bits	set	140
   305  009F                     _ADCON1bits	set	159
   306  0089                     _TRISE	set	137
   307  0088                     _TRISD	set	136
   308  0087                     _TRISC	set	135
   309  0085                     _TRISA	set	133
   310  008F                     _OSCCONbits	set	143
   311  043B                     _TRISC3	set	1083
   312  043D                     _TRISC5	set	1085
   313  0188                     _ANSEL	set	392
   314  0189                     _ANSELH	set	393
   315                           
   316                           	psect	cinit
   317  000F                     start_initialization:	
   318                           ; #config settings
   319                           
   320  000F                     __initialization:
   321                           
   322                           ; Clear objects allocated to COMMON
   323  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   324  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   325  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   326  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   327  0013                     end_of_initialization:	
   328                           ;End of C runtime variable initialization code
   329                           
   330  0013                     __end_of__initialization:
   331  0013  0183               	clrf	3
   332  0014  120A  118A  28D5   	ljmp	_main	;jump to C main() function
   333                           
   334                           	psect	bssCOMMON
   335  0076                     __pbssCOMMON:
   336  0076                     _flag_1:
   337  0076                     	ds	1
   338  0077                     _POT2:
   339  0077                     	ds	1
   340  0078                     _POT1:
   341  0078                     	ds	1
   342  0079                     _temporal:
   343  0079                     	ds	1
   344                           
   345                           	psect	cstackCOMMON
   346  0070                     __pcstackCOMMON:
   347  0070                     ?_spiRead:
   348  0070                     ??_spiRead:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_spiWrite:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ??_spiWrite:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_setup:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_isr:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_main:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_spiReceiveWait:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ??_spiReceiveWait:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     spiWrite@dat:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0070                     	ds	1
   378  0071                     ??_isr:
   379                           
   380                           ; 1 bytes @ 0x1
   381  0071                     	ds	3
   382  0074                     ??_spiInit:
   383  0074                     spiInit@sType:	
   384                           ; 1 bytes @ 0x4
   385                           
   386                           
   387                           ; 1 bytes @ 0x4
   388  0074                     	ds	1
   389  0075                     ??_setup:
   390                           
   391                           ; 1 bytes @ 0x5
   392  0075                     	ds	1
   393  0076                     ??_main:
   394                           
   395                           	psect	cstackBANK0
   396  0020                     __pcstackBANK0:	
   397                           ; 1 bytes @ 0x6
   398                           
   399  0020                     ?_spiInit:
   400  0020                     spiInit@sDataSample:	
   401                           ; 1 bytes @ 0x0
   402                           
   403                           
   404                           ; 1 bytes @ 0x0
   405  0020                     	ds	1
   406  0021                     spiInit@sClockIdle:
   407                           
   408                           ; 1 bytes @ 0x1
   409  0021                     	ds	1
   410  0022                     spiInit@sTransmitEdge:
   411                           
   412                           ; 1 bytes @ 0x2
   413  0022                     	ds	1
   414                           
   415                           	psect	maintext
   416  00D5                     __pmaintext:	
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 104 in file "Lab03_main_slave.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : B00/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels required when called:    5
   442 ;; This function calls:
   443 ;;		_setup
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _main
   451  00D5                     _main:
   452  00D5                     l994:	
   453                           ;incstack = 0
   454                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   455                           
   456                           
   457                           ;Lab03_main_slave.c: 105:     OPTION_REGbits.PS2 = 1;
   458  00D5  120A  118A  2017  120A  118A  	fcall	_setup
   459  00DA                     l79:	
   460                           ;Lab03_main_slave.c: 106:     OPTION_REGbits.PS1 = 1;
   461                           
   462  00DA                     l80:	
   463                           ;Lab03_main_slave.c: 108:     TMR0 = 10;
   464                           
   465  00DA  28DA               	goto	l79
   466  00DB  120A  118A  280C   	ljmp	start
   467  00DE                     __end_of_main:
   468                           
   469                           	psect	text1
   470  0017                     __ptext1:	
   471 ;; *************** function _setup *****************
   472 ;; Defined at:
   473 ;;		line 114 in file "Lab03_main_slave.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          1       0       0       0       0
   490 ;;      Totals:         1       0       0       0       0
   491 ;;Total ram usage:        1 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    4
   494 ;; This function calls:
   495 ;;		_spiInit
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _setup
   503  0017                     _setup:
   504  0017                     l924:	
   505                           ;incstack = 0
   506                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   507                           
   508  0017  1683               	bsf	3,5	;RP0=1, select bank1
   509  0018  1303               	bcf	3,6	;RP1=0, select bank1
   510  0019  170F               	bsf	15,6	;volatile
   511  001A  168F               	bsf	15,5	;volatile
   512  001B  160F               	bsf	15,4	;volatile
   513  001C  140F               	bsf	15,0	;volatile
   514  001D                     l926:
   515  001D  1683               	bsf	3,5	;RP0=1, select bank3
   516  001E  1703               	bsf	3,6	;RP1=1, select bank3
   517  001F  0189               	clrf	9	;volatile
   518  0020                     l928:
   519  0020  3003               	movlw	3
   520  0021  0088               	movwf	8	;volatile
   521  0022                     l930:
   522  0022  3023               	movlw	35
   523  0023  1683               	bsf	3,5	;RP0=1, select bank1
   524  0024  1303               	bcf	3,6	;RP1=0, select bank1
   525  0025  0085               	movwf	5	;volatile
   526  0026                     l932:
   527  0026  3018               	movlw	24
   528  0027  0087               	movwf	7	;volatile
   529  0028                     l934:
   530  0028  0188               	clrf	8	;volatile
   531  0029                     l936:
   532  0029  0189               	clrf	9	;volatile
   533  002A                     l938:
   534  002A  1283               	bcf	3,5	;RP0=0, select bank0
   535  002B  1303               	bcf	3,6	;RP1=0, select bank0
   536  002C  0185               	clrf	5	;volatile
   537  002D                     l940:
   538  002D  0187               	clrf	7	;volatile
   539  002E                     l942:
   540  002E  0188               	clrf	8	;volatile
   541  002F                     l944:
   542  002F  0189               	clrf	9	;volatile
   543  0030                     l946:
   544  0030  1683               	bsf	3,5	;RP0=1, select bank1
   545  0031  1303               	bcf	3,6	;RP1=0, select bank1
   546  0032  139F               	bcf	31,7	;volatile
   547  0033                     l948:
   548  0033  121F               	bcf	31,4	;volatile
   549  0034                     l950:
   550  0034  129F               	bcf	31,5	;volatile
   551  0035                     l952:
   552  0035  1283               	bcf	3,5	;RP0=0, select bank0
   553  0036  1303               	bcf	3,6	;RP1=0, select bank0
   554  0037  081F               	movf	31,w	;volatile
   555  0038  393F               	andlw	-193
   556  0039  3880               	iorlw	128
   557  003A  009F               	movwf	31	;volatile
   558  003B                     l954:
   559  003B  30C3               	movlw	-61
   560  003C  059F               	andwf	31,f	;volatile
   561  003D                     l956:
   562  003D  141F               	bsf	31,0	;volatile
   563  003E                     l958:
   564  003E  3021               	movlw	33
   565  003F  00F5               	movwf	??_setup
   566  0040                     u107:
   567  0040  0BF5               	decfsz	??_setup,f
   568  0041  2840               	goto	u107
   569  0042                     l960:
   570  0042  1283               	bcf	3,5	;RP0=0, select bank0
   571  0043  1303               	bcf	3,6	;RP1=0, select bank0
   572  0044  149F               	bsf	31,1	;volatile
   573  0045                     l962:
   574  0045  178B               	bsf	11,7	;volatile
   575  0046                     l964:
   576  0046  168B               	bsf	11,5	;volatile
   577  0047                     l966:
   578  0047  110B               	bcf	11,2	;volatile
   579  0048                     l968:
   580  0048  170B               	bsf	11,6	;volatile
   581  0049                     l970:
   582  0049  118C               	bcf	12,3	;volatile
   583  004A                     l972:
   584  004A  1683               	bsf	3,5	;RP0=1, select bank1
   585  004B  1303               	bcf	3,6	;RP1=0, select bank1
   586  004C  158C               	bsf	12,3	;volatile
   587  004D                     l974:
   588  004D  1685               	bsf	5,5	;volatile
   589  004E                     l976:
   590  004E  170C               	bsf	12,6	;volatile
   591  004F                     l978:
   592  004F  1283               	bcf	3,5	;RP0=0, select bank0
   593  0050  1303               	bcf	3,6	;RP1=0, select bank0
   594  0051  130C               	bcf	12,6	;volatile
   595  0052                     l980:
   596  0052  1683               	bsf	3,5	;RP0=1, select bank1
   597  0053  1303               	bcf	3,6	;RP1=0, select bank1
   598  0054  1281               	bcf	1,5	;volatile
   599  0055                     l982:
   600  0055  1181               	bcf	1,3	;volatile
   601  0056                     l984:
   602  0056  1501               	bsf	1,2	;volatile
   603  0057                     l986:
   604  0057  1481               	bsf	1,1	;volatile
   605  0058                     l988:
   606  0058  1401               	bsf	1,0	;volatile
   607  0059                     l990:
   608  0059  300A               	movlw	10
   609  005A  1283               	bcf	3,5	;RP0=0, select bank0
   610  005B  1303               	bcf	3,6	;RP1=0, select bank0
   611  005C  0081               	movwf	1	;volatile
   612  005D                     l992:
   613  005D  01A0               	clrf	spiInit@sDataSample
   614  005E  01A1               	clrf	spiInit@sClockIdle
   615  005F  01A2               	clrf	spiInit@sTransmitEdge
   616  0060  3024               	movlw	36
   617  0061  120A  118A  20B7  120A  118A  	fcall	_spiInit
   618  0066                     l85:
   619  0066  0008               	return
   620  0067                     __end_of_setup:
   621                           
   622                           	psect	text2
   623  00B7                     __ptext2:	
   624 ;; *************** function _spiInit *****************
   625 ;; Defined at:
   626 ;;		line 12 in file "SPI.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  sType           1    wreg     enum E1264
   629 ;;  sDataSample     1    0[BANK0 ] enum E1272
   630 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   631 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  sType           1    4[COMMON] enum E1264
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       3       0       0       0
   644 ;;      Locals:         1       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         1       3       0       0       0
   647 ;;Total ram usage:        4 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    3
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_setup
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _spiInit
   659  00B7                     _spiInit:
   660                           
   661                           ;incstack = 0
   662                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   663                           ;spiInit@sType stored from wreg
   664  00B7  00F4               	movwf	spiInit@sType
   665  00B8                     l914:
   666                           
   667                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   668  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   669  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   670  00BA  1287               	bcf	7,5	;volatile
   671                           
   672                           ;SPI.c: 15:     if(sType & 0b00000100)
   673  00BB  1D74               	btfss	spiInit@sType,2
   674  00BC  28BE               	goto	u91
   675  00BD  28BF               	goto	u90
   676  00BE                     u91:
   677  00BE  28C7               	goto	l920
   678  00BF                     u90:
   679  00BF                     l916:
   680                           
   681                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   682  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   683  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   684  00C1  0822               	movf	spiInit@sTransmitEdge,w
   685  00C2  1683               	bsf	3,5	;RP0=1, select bank1
   686  00C3  1303               	bcf	3,6	;RP1=0, select bank1
   687  00C4  0094               	movwf	20	;volatile
   688  00C5                     l918:
   689                           
   690                           ;SPI.c: 18:         TRISC3 = 1;
   691  00C5  1587               	bsf	7,3	;volatile
   692                           
   693                           ;SPI.c: 19:     }
   694  00C6  28CF               	goto	l101
   695  00C7                     l920:
   696                           
   697                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   698  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   699  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   700  00C9  0820               	movf	spiInit@sDataSample,w
   701  00CA  0422               	iorwf	spiInit@sTransmitEdge,w
   702  00CB  1683               	bsf	3,5	;RP0=1, select bank1
   703  00CC  1303               	bcf	3,6	;RP1=0, select bank1
   704  00CD  0094               	movwf	20	;volatile
   705  00CE                     l922:
   706                           
   707                           ;SPI.c: 23:         TRISC3 = 0;
   708  00CE  1187               	bcf	7,3	;volatile
   709  00CF                     l101:	
   710                           ;SPI.c: 24:     }
   711                           
   712                           
   713                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   714  00CF  0874               	movf	spiInit@sType,w
   715  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   716  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   717  00D2  0421               	iorwf	spiInit@sClockIdle,w
   718  00D3  0094               	movwf	20	;volatile
   719  00D4                     l102:
   720  00D4  0008               	return
   721  00D5                     __end_of_spiInit:
   722                           
   723                           	psect	text3
   724  0067                     __ptext3:	
   725 ;; *************** function _isr *****************
   726 ;; Defined at:
   727 ;;		line 72 in file "Lab03_main_slave.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, pclath, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0
   743 ;;      Temps:          3       0       0       0       0
   744 ;;      Totals:         3       0       0       0       0
   745 ;;Total ram usage:        3 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    2
   748 ;; This function calls:
   749 ;;		_spiRead
   750 ;;		_spiWrite
   751 ;; This function is called by:
   752 ;;		Interrupt level 1
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _isr
   758  0067                     _isr:
   759  0067                     i1l796:
   760                           
   761                           ;Lab03_main_slave.c: 74: 
   762  0067  1283               	bcf	3,5	;RP0=0, select bank0
   763  0068  1303               	bcf	3,6	;RP1=0, select bank0
   764  0069  1F0C               	btfss	12,6	;volatile
   765  006A  286C               	goto	u3_21
   766  006B  286D               	goto	u3_20
   767  006C                     u3_21:
   768  006C  2889               	goto	i1l816
   769  006D                     u3_20:
   770  006D                     i1l798:
   771                           
   772                           ;Lab03_main_slave.c: 75:     PORTA = 0x00;
   773  006D  0376               	decf	_flag_1,w
   774  006E  1D03               	btfss	3,2
   775  006F  2871               	goto	u4_21
   776  0070  2872               	goto	u4_20
   777  0071                     u4_21:
   778  0071  2879               	goto	i1l806
   779  0072                     u4_20:
   780  0072                     i1l800:
   781                           
   782                           ;Lab03_main_slave.c: 76:     PORTC = 0x00;
   783  0072  081E               	movf	30,w	;volatile
   784  0073  00F1               	movwf	??_isr
   785  0074  0871               	movf	??_isr,w
   786  0075  00F8               	movwf	_POT1
   787  0076                     i1l802:
   788                           
   789                           ;Lab03_main_slave.c: 77:     PORTD = 0x00;
   790  0076  151F               	bsf	31,2	;volatile
   791  0077                     i1l804:
   792                           
   793                           ;Lab03_main_slave.c: 78:     PORTE = 0x00;
   794  0077  01F6               	clrf	_flag_1
   795                           
   796                           ;Lab03_main_slave.c: 79: 
   797  0078  2880               	goto	i1l812
   798  0079                     i1l806:
   799                           
   800                           ;Lab03_main_slave.c: 80: 
   801  0079  081E               	movf	30,w	;volatile
   802  007A  00F1               	movwf	??_isr
   803  007B  0871               	movf	??_isr,w
   804  007C  00F7               	movwf	_POT2
   805  007D                     i1l808:
   806                           
   807                           ;Lab03_main_slave.c: 81:     ADCON1bits.ADFM = 0;
   808  007D  111F               	bcf	31,2	;volatile
   809  007E                     i1l810:
   810                           
   811                           ;Lab03_main_slave.c: 82:     ADCON1bits.VCFG0 = 0;
   812  007E  01F6               	clrf	_flag_1
   813  007F  0AF6               	incf	_flag_1,f
   814  0080                     i1l812:
   815                           
   816                           ;Lab03_main_slave.c: 85:     ADCON0bits.ADCS = 0b10;
   817  0080  130C               	bcf	12,6	;volatile
   818                           
   819                           ;Lab03_main_slave.c: 86:     ADCON0bits.CHS = 0;
   820  0081  3027               	movlw	39
   821  0082  00F1               	movwf	??_isr
   822  0083                     u11_27:
   823  0083  0BF1               	decfsz	??_isr,f
   824  0084  2883               	goto	u11_27
   825  0085  2886               	nop2
   826  0086                     i1l814:
   827                           
   828                           ;Lab03_main_slave.c: 87:     ADCON0bits.ADON = 1;
   829  0086  1283               	bcf	3,5	;RP0=0, select bank0
   830  0087  1303               	bcf	3,6	;RP1=0, select bank0
   831  0088  149F               	bsf	31,1	;volatile
   832  0089                     i1l816:
   833                           
   834                           ;Lab03_main_slave.c: 90: 
   835  0089  1D8C               	btfss	12,3	;volatile
   836  008A  288C               	goto	u5_21
   837  008B  288D               	goto	u5_20
   838  008C                     u5_21:
   839  008C  28B0               	goto	i1l74
   840  008D                     u5_20:
   841  008D                     i1l818:
   842                           
   843                           ;Lab03_main_slave.c: 91: 
   844  008D  120A  118A  20DE  120A  118A  	fcall	_spiRead
   845  0092  00F1               	movwf	??_isr
   846  0093  0871               	movf	??_isr,w
   847  0094  00F9               	movwf	_temporal
   848  0095                     i1l820:
   849                           
   850                           ;Lab03_main_slave.c: 92:     INTCONbits.GIE = 1;
   851  0095  0379               	decf	_temporal,w
   852  0096  1D03               	btfss	3,2
   853  0097  2899               	goto	u6_21
   854  0098  289A               	goto	u6_20
   855  0099                     u6_21:
   856  0099  28A1               	goto	i1l824
   857  009A                     u6_20:
   858  009A                     i1l822:
   859                           
   860                           ;Lab03_main_slave.c: 93:     INTCONbits.T0IE = 1;
   861  009A  0878               	movf	_POT1,w
   862  009B  120A  118A  20EE  120A  118A  	fcall	_spiWrite
   863                           
   864                           ;Lab03_main_slave.c: 94:     INTCONbits.T0IF = 0;
   865  00A0  28AD               	goto	i1l828
   866  00A1                     i1l824:
   867  00A1  3002               	movlw	2
   868  00A2  0679               	xorwf	_temporal,w
   869  00A3  1D03               	btfss	3,2
   870  00A4  28A6               	goto	u7_21
   871  00A5  28A7               	goto	u7_20
   872  00A6                     u7_21:
   873  00A6  28AD               	goto	i1l828
   874  00A7                     u7_20:
   875  00A7                     i1l826:
   876                           
   877                           ;Lab03_main_slave.c: 96:     PIR1bits.SSPIF = 0;
   878  00A7  0877               	movf	_POT2,w
   879  00A8  120A  118A  20EE  120A  118A  	fcall	_spiWrite
   880  00AD                     i1l828:
   881                           
   882                           ;Lab03_main_slave.c: 98:     TRISAbits.TRISA5 = 1;
   883  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   884  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   885  00AF  118C               	bcf	12,3	;volatile
   886  00B0                     i1l74:
   887  00B0  0873               	movf	??_isr+2,w
   888  00B1  008A               	movwf	10
   889  00B2  0E72               	swapf	??_isr+1,w
   890  00B3  0083               	movwf	3
   891  00B4  0EFE               	swapf	btemp,f
   892  00B5  0E7E               	swapf	btemp,w
   893  00B6  0009               	retfie
   894  00B7                     __end_of_isr:
   895                           
   896                           	psect	intentry
   897  0004                     __pintentry:	
   898                           ;incstack = 0
   899                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   900                           
   901  0004                     interrupt_function:
   902  007E                     saved_w	set	btemp
   903  0004  00FE               	movwf	btemp
   904  0005  0E03               	swapf	3,w
   905  0006  00F2               	movwf	??_isr+1
   906  0007  080A               	movf	10,w
   907  0008  00F3               	movwf	??_isr+2
   908  0009  120A  118A  2867   	ljmp	_isr
   909                           
   910                           	psect	text4
   911  00EE                     __ptext4:	
   912 ;; *************** function _spiWrite *****************
   913 ;; Defined at:
   914 ;;		line 34 in file "SPI.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  dat             1    wreg     unsigned char 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  dat             1    0[COMMON] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         1       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0
   931 ;;      Totals:         1       0       0       0       0
   932 ;;Total ram usage:        1 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_isr
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           
   942                           ;psect for function _spiWrite
   943  00EE                     _spiWrite:
   944                           
   945                           ;incstack = 0
   946                           ; Regs used in _spiWrite: [wreg]
   947                           ;spiWrite@dat stored from wreg
   948  00EE  00F0               	movwf	spiWrite@dat
   949  00EF                     i1l724:
   950                           
   951                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   952  00EF  0870               	movf	spiWrite@dat,w
   953  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   954  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   955  00F2  0093               	movwf	19	;volatile
   956  00F3                     i1l111:
   957  00F3  0008               	return
   958  00F4                     __end_of_spiWrite:
   959                           
   960                           	psect	text5
   961  00DE                     __ptext5:	
   962 ;; *************** function _spiRead *****************
   963 ;; Defined at:
   964 ;;		line 39 in file "SPI.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      unsigned char 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, pclath, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    1
   985 ;; This function calls:
   986 ;;		_spiReceiveWait
   987 ;; This function is called by:
   988 ;;		_isr
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _spiRead
   994  00DE                     _spiRead:
   995  00DE                     i1l718:	
   996                           ;incstack = 0
   997                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   998                           
   999                           
  1000                           ;SPI.c: 41:     spiReceiveWait();
  1001  00DE  120A  118A  20E7  120A  118A  	fcall	_spiReceiveWait
  1002  00E3                     i1l720:
  1003                           
  1004                           ;SPI.c: 42:     return(SSPBUF);
  1005  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1006  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1007  00E5  0813               	movf	19,w	;volatile
  1008  00E6                     i1l114:
  1009  00E6  0008               	return
  1010  00E7                     __end_of_spiRead:
  1011                           
  1012                           	psect	text6
  1013  00E7                     __ptext6:	
  1014 ;; *************** function _spiReceiveWait *****************
  1015 ;; Defined at:
  1016 ;;		line 29 in file "SPI.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		None
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_spiRead
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _spiReceiveWait
  1045  00E7                     _spiReceiveWait:
  1046  00E7                     i1l716:	
  1047                           ;incstack = 0
  1048                           ; Regs used in _spiReceiveWait: []
  1049                           
  1050  00E7                     i1l105:	
  1051                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1052                           
  1053  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1054  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1055  00E9  1C14               	btfss	20,0	;volatile
  1056  00EA  28EC               	goto	u2_21
  1057  00EB  28ED               	goto	u2_20
  1058  00EC                     u2_21:
  1059  00EC  28E7               	goto	i1l105
  1060  00ED                     u2_20:
  1061  00ED                     i1l108:
  1062  00ED  0008               	return
  1063  00EE                     __end_of_spiReceiveWait:
  1064  007E                     btemp	set	126	;btemp
  1065  007E                     wtemp0	set	126
  1066                           
  1067                           	psect	config
  1068                           
  1069                           ;Config register CONFIG1 @ 0x2007
  1070                           ;	Oscillator Selection bits
  1071                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1072                           ;	Watchdog Timer Enable bit
  1073                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1074                           ;	Power-up Timer Enable bit
  1075                           ;	PWRTE = ON, PWRT enabled
  1076                           ;	RE3/MCLR pin function select bit
  1077                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1078                           ;	Code Protection bit
  1079                           ;	CP = OFF, Program memory code protection is disabled
  1080                           ;	Data Code Protection bit
  1081                           ;	CPD = OFF, Data memory code protection is disabled
  1082                           ;	Brown Out Reset Selection bits
  1083                           ;	BOREN = OFF, BOR disabled
  1084                           ;	Internal External Switchover bit
  1085                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1086                           ;	Fail-Safe Clock Monitor Enabled bit
  1087                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1088                           ;	Low Voltage Programming Enable bit
  1089                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1090                           ;	In-Circuit Debugger Mode bit
  1091                           ;	DEBUG = 0x1, unprogrammed default
  1092  2007                     	org	8199
  1093  2007  20C4               	dw	8388
  1094                           
  1095                           ;Config register CONFIG2 @ 0x2008
  1096                           ;	Brown-out Reset Selection bit
  1097                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1098                           ;	Flash Program Memory Self Write Enable bits
  1099                           ;	WRT = OFF, Write protection off
  1100  2008                     	org	8200
  1101  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     456
                                              5 COMMON     1     1      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 03 01:13:39 2021

            _SSPSTATbits 0094                       l80 00DA                       l85 0066  
                     l79 00DA                       u90 00BF                       u91 00BE  
                    l101 00CF                      l102 00D4                      l920 00C7  
                    l922 00CE                      l914 00B8                      l930 0022  
                    l916 00BF                      l940 002D                      l932 0026  
                    l924 0017                      l918 00C5                      l950 0034  
                    l942 002E                      l934 0028                      l926 001D  
                    l960 0042                      l952 0035                      l944 002F  
                    l936 0029                      l928 0020                      l970 0049  
                    l962 0045                      l954 003B                      l946 0030  
                    l938 002A                      l980 0052                      l972 004A  
                    l964 0046                      l956 003D                      l948 0033  
                    l990 0059                      l982 0055                      l974 004D  
                    l966 0047                      l958 003E                      l992 005D  
                    l984 0056                      l976 004E                      l968 0048  
                    l986 0057                      l978 004F                      l994 00D5  
                    l988 0058                      u107 0040                      _isr 0067  
                   _ADIF 0066                     ?_isr 0070                     i1l74 00B0  
                   _POT1 0078                     _POT2 0077                     _TMR0 0001  
                   u2_20 00ED                     u2_21 00EC                     u3_20 006D  
                   u3_21 006C                     u4_20 0072                     u4_21 0071  
                   u5_20 008D                     u5_21 008C                     u6_20 009A  
                   u6_21 0099                     u7_20 00A7                     u7_21 00A6  
                   _main 00D5                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l111 00F3                    i1l105 00E7                    i1l114 00E6  
                  i1l108 00ED                    i1l720 00E3                    i1l800 0072  
                  i1l810 007E                    i1l802 0076                    i1l716 00E7  
                  i1l724 00EF                    i1l820 0095                    i1l812 0080  
                  i1l804 0077                    i1l718 00DE                    i1l822 009A  
                  i1l814 0086                    i1l806 0079                    i1l824 00A1  
                  i1l808 007D                    i1l816 0089                    i1l826 00A7  
                  i1l818 008D                    i1l828 00AD                    i1l796 0067  
                  i1l798 006D                    u11_27 0083                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _SSPIF 0063                    _setup 0017  
                  pclath 000A          __end_of_spiInit 00D5          __end_of_spiRead 00E7  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00DE                   ??_main 0076                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _flag_1 0076                   saved_w 007E         __end_of_spiWrite 00F4  
              ??_spiInit 0074                ??_spiRead 0070  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 0067           _OPTION_REGbits 0081  
                ??_setup 0075               __pmaintext 00D5               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0017                  __ptext2 00B7                  __ptext3 0067  
                __ptext4 00EE                  __ptext5 00DE                  __ptext6 00E7  
           __size_of_isr 0050                  _spiInit 00B7                  _spiRead 00DE  
   end_of_initialization 0013               ??_spiWrite 0070                _TRISAbits 0085  
            spiWrite@dat 0070           _spiReceiveWait 00E7      start_initialization 000F  
            __end_of_isr 00B7   __end_of_spiReceiveWait 00EE              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0020                 ?_spiRead 0070  
         __size_of_setup 0050     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_main 0009                 _temporal 0079  
               _spiWrite 00EE             spiInit@sType 0074        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
             _OSCCONbits 008F  
